<?php
/**
 * RefundTransactionPayload
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Clearent Transactions API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * RefundTransactionPayload Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class RefundTransactionPayload implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'RefundTransactionPayload';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'amount' => 'string',
        'billing' => '\OpenAPI\Client\Model\Address',
        'billing_is_shipping' => '\OpenAPI\Client\Model\BillingIsShipping',
        'card' => 'string',
        'card_inquiry' => 'bool',
        'cash_back_amount' => 'string',
        'check_field' => '\OpenAPI\Client\Model\CheckField',
        'check_field_mid' => 'bool',
        'client_ip' => 'string',
        'comments' => 'string',
        'contactless' => '\OpenAPI\Client\Model\Contactless',
        'contactless_device' => '\OpenAPI\Client\Model\ContactlessDevice',
        'create_token' => '\OpenAPI\Client\Model\CreateToken',
        'csc' => 'string',
        'customer_id' => 'string',
        'cvm' => '\OpenAPI\Client\Model\Cvm',
        'description' => 'string',
        'email_address' => 'string',
        'email_receipt' => '\OpenAPI\Client\Model\EmailReceipt',
        'emv_data' => 'string',
        'emv_entry_method' => '\OpenAPI\Client\Model\EmvEntryMethod',
        'encrypted_track_data' => 'string',
        'exp_date' => 'string',
        'id' => 'string',
        'invoice' => 'string',
        'is_sp30' => 'bool',
        'key_serial_number' => 'string',
        'level3' => '\OpenAPI\Client\Model\ClearentLevel3',
        'merchant_legacy_token' => '\OpenAPI\Client\Model\MerchantLegacyToken',
        'order_id' => 'string',
        'partial_authorization' => 'bool',
        'pin_data' => 'string',
        'platform_fees' => '\OpenAPI\Client\Model\PlatformFee[]',
        'purchase_order' => 'string',
        'sales_tax_amount' => 'string',
        'sales_tax_type' => '\OpenAPI\Client\Model\SalesTaxType',
        'shipping' => '\OpenAPI\Client\Model\Address',
        'software_type' => 'string',
        'software_type_version' => 'string',
        'tip_amount' => 'string',
        'token_description' => 'string',
        'type' => '\OpenAPI\Client\Model\TypeRefundTransaction',
        'voucher_approval_code' => 'string',
        'voucher_serial_number' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'amount' => null,
        'billing' => null,
        'billing_is_shipping' => null,
        'card' => null,
        'card_inquiry' => null,
        'cash_back_amount' => null,
        'check_field' => null,
        'check_field_mid' => null,
        'client_ip' => null,
        'comments' => null,
        'contactless' => null,
        'contactless_device' => null,
        'create_token' => null,
        'csc' => null,
        'customer_id' => null,
        'cvm' => null,
        'description' => null,
        'email_address' => null,
        'email_receipt' => null,
        'emv_data' => null,
        'emv_entry_method' => null,
        'encrypted_track_data' => null,
        'exp_date' => null,
        'id' => null,
        'invoice' => null,
        'is_sp30' => null,
        'key_serial_number' => null,
        'level3' => null,
        'merchant_legacy_token' => null,
        'order_id' => null,
        'partial_authorization' => null,
        'pin_data' => null,
        'platform_fees' => null,
        'purchase_order' => null,
        'sales_tax_amount' => null,
        'sales_tax_type' => null,
        'shipping' => null,
        'software_type' => null,
        'software_type_version' => null,
        'tip_amount' => null,
        'token_description' => null,
        'type' => null,
        'voucher_approval_code' => null,
        'voucher_serial_number' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'amount' => 'amount',
        'billing' => 'billing',
        'billing_is_shipping' => 'billing-is-shipping',
        'card' => 'card',
        'card_inquiry' => 'card-inquiry',
        'cash_back_amount' => 'cash-back-amount',
        'check_field' => 'check-field',
        'check_field_mid' => 'check-field-mid',
        'client_ip' => 'client-ip',
        'comments' => 'comments',
        'contactless' => 'contactless',
        'contactless_device' => 'contactless-device',
        'create_token' => 'create-token',
        'csc' => 'csc',
        'customer_id' => 'customer-id',
        'cvm' => 'cvm',
        'description' => 'description',
        'email_address' => 'email-address',
        'email_receipt' => 'email-receipt',
        'emv_data' => 'emv-data',
        'emv_entry_method' => 'emv-entry-method',
        'encrypted_track_data' => 'encrypted-track-data',
        'exp_date' => 'exp-date',
        'id' => 'id',
        'invoice' => 'invoice',
        'is_sp30' => 'is-sp30',
        'key_serial_number' => 'key-serial-number',
        'level3' => 'level3',
        'merchant_legacy_token' => 'merchant-legacy-token',
        'order_id' => 'order-id',
        'partial_authorization' => 'partial-authorization',
        'pin_data' => 'pin-data',
        'platform_fees' => 'platform-fees',
        'purchase_order' => 'purchase-order',
        'sales_tax_amount' => 'sales-tax-amount',
        'sales_tax_type' => 'sales-tax-type',
        'shipping' => 'shipping',
        'software_type' => 'software-type',
        'software_type_version' => 'software-type-version',
        'tip_amount' => 'tip-amount',
        'token_description' => 'token-description',
        'type' => 'type',
        'voucher_approval_code' => 'voucher-approval-code',
        'voucher_serial_number' => 'voucher-serial-number'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'amount' => 'setAmount',
        'billing' => 'setBilling',
        'billing_is_shipping' => 'setBillingIsShipping',
        'card' => 'setCard',
        'card_inquiry' => 'setCardInquiry',
        'cash_back_amount' => 'setCashBackAmount',
        'check_field' => 'setCheckField',
        'check_field_mid' => 'setCheckFieldMid',
        'client_ip' => 'setClientIp',
        'comments' => 'setComments',
        'contactless' => 'setContactless',
        'contactless_device' => 'setContactlessDevice',
        'create_token' => 'setCreateToken',
        'csc' => 'setCsc',
        'customer_id' => 'setCustomerId',
        'cvm' => 'setCvm',
        'description' => 'setDescription',
        'email_address' => 'setEmailAddress',
        'email_receipt' => 'setEmailReceipt',
        'emv_data' => 'setEmvData',
        'emv_entry_method' => 'setEmvEntryMethod',
        'encrypted_track_data' => 'setEncryptedTrackData',
        'exp_date' => 'setExpDate',
        'id' => 'setId',
        'invoice' => 'setInvoice',
        'is_sp30' => 'setIsSp30',
        'key_serial_number' => 'setKeySerialNumber',
        'level3' => 'setLevel3',
        'merchant_legacy_token' => 'setMerchantLegacyToken',
        'order_id' => 'setOrderId',
        'partial_authorization' => 'setPartialAuthorization',
        'pin_data' => 'setPinData',
        'platform_fees' => 'setPlatformFees',
        'purchase_order' => 'setPurchaseOrder',
        'sales_tax_amount' => 'setSalesTaxAmount',
        'sales_tax_type' => 'setSalesTaxType',
        'shipping' => 'setShipping',
        'software_type' => 'setSoftwareType',
        'software_type_version' => 'setSoftwareTypeVersion',
        'tip_amount' => 'setTipAmount',
        'token_description' => 'setTokenDescription',
        'type' => 'setType',
        'voucher_approval_code' => 'setVoucherApprovalCode',
        'voucher_serial_number' => 'setVoucherSerialNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'amount' => 'getAmount',
        'billing' => 'getBilling',
        'billing_is_shipping' => 'getBillingIsShipping',
        'card' => 'getCard',
        'card_inquiry' => 'getCardInquiry',
        'cash_back_amount' => 'getCashBackAmount',
        'check_field' => 'getCheckField',
        'check_field_mid' => 'getCheckFieldMid',
        'client_ip' => 'getClientIp',
        'comments' => 'getComments',
        'contactless' => 'getContactless',
        'contactless_device' => 'getContactlessDevice',
        'create_token' => 'getCreateToken',
        'csc' => 'getCsc',
        'customer_id' => 'getCustomerId',
        'cvm' => 'getCvm',
        'description' => 'getDescription',
        'email_address' => 'getEmailAddress',
        'email_receipt' => 'getEmailReceipt',
        'emv_data' => 'getEmvData',
        'emv_entry_method' => 'getEmvEntryMethod',
        'encrypted_track_data' => 'getEncryptedTrackData',
        'exp_date' => 'getExpDate',
        'id' => 'getId',
        'invoice' => 'getInvoice',
        'is_sp30' => 'getIsSp30',
        'key_serial_number' => 'getKeySerialNumber',
        'level3' => 'getLevel3',
        'merchant_legacy_token' => 'getMerchantLegacyToken',
        'order_id' => 'getOrderId',
        'partial_authorization' => 'getPartialAuthorization',
        'pin_data' => 'getPinData',
        'platform_fees' => 'getPlatformFees',
        'purchase_order' => 'getPurchaseOrder',
        'sales_tax_amount' => 'getSalesTaxAmount',
        'sales_tax_type' => 'getSalesTaxType',
        'shipping' => 'getShipping',
        'software_type' => 'getSoftwareType',
        'software_type_version' => 'getSoftwareTypeVersion',
        'tip_amount' => 'getTipAmount',
        'token_description' => 'getTokenDescription',
        'type' => 'getType',
        'voucher_approval_code' => 'getVoucherApprovalCode',
        'voucher_serial_number' => 'getVoucherSerialNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['amount'] = $data['amount'] ?? null;
        $this->container['billing'] = $data['billing'] ?? null;
        $this->container['billing_is_shipping'] = $data['billing_is_shipping'] ?? null;
        $this->container['card'] = $data['card'] ?? null;
        $this->container['card_inquiry'] = $data['card_inquiry'] ?? true;
        $this->container['cash_back_amount'] = $data['cash_back_amount'] ?? null;
        $this->container['check_field'] = $data['check_field'] ?? null;
        $this->container['check_field_mid'] = $data['check_field_mid'] ?? null;
        $this->container['client_ip'] = $data['client_ip'] ?? null;
        $this->container['comments'] = $data['comments'] ?? null;
        $this->container['contactless'] = $data['contactless'] ?? null;
        $this->container['contactless_device'] = $data['contactless_device'] ?? null;
        $this->container['create_token'] = $data['create_token'] ?? null;
        $this->container['csc'] = $data['csc'] ?? null;
        $this->container['customer_id'] = $data['customer_id'] ?? null;
        $this->container['cvm'] = $data['cvm'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['email_address'] = $data['email_address'] ?? null;
        $this->container['email_receipt'] = $data['email_receipt'] ?? null;
        $this->container['emv_data'] = $data['emv_data'] ?? null;
        $this->container['emv_entry_method'] = $data['emv_entry_method'] ?? null;
        $this->container['encrypted_track_data'] = $data['encrypted_track_data'] ?? null;
        $this->container['exp_date'] = $data['exp_date'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['invoice'] = $data['invoice'] ?? null;
        $this->container['is_sp30'] = $data['is_sp30'] ?? null;
        $this->container['key_serial_number'] = $data['key_serial_number'] ?? null;
        $this->container['level3'] = $data['level3'] ?? null;
        $this->container['merchant_legacy_token'] = $data['merchant_legacy_token'] ?? null;
        $this->container['order_id'] = $data['order_id'] ?? null;
        $this->container['partial_authorization'] = $data['partial_authorization'] ?? null;
        $this->container['pin_data'] = $data['pin_data'] ?? null;
        $this->container['platform_fees'] = $data['platform_fees'] ?? null;
        $this->container['purchase_order'] = $data['purchase_order'] ?? null;
        $this->container['sales_tax_amount'] = $data['sales_tax_amount'] ?? null;
        $this->container['sales_tax_type'] = $data['sales_tax_type'] ?? null;
        $this->container['shipping'] = $data['shipping'] ?? null;
        $this->container['software_type'] = $data['software_type'] ?? null;
        $this->container['software_type_version'] = $data['software_type_version'] ?? null;
        $this->container['tip_amount'] = $data['tip_amount'] ?? null;
        $this->container['token_description'] = $data['token_description'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['voucher_approval_code'] = $data['voucher_approval_code'] ?? null;
        $this->container['voucher_serial_number'] = $data['voucher_serial_number'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if (!is_null($this->container['platform_fees']) && (count($this->container['platform_fees']) > 2)) {
            $invalidProperties[] = "invalid value for 'platform_fees', number of items must be less than or equal to 2.";
        }

        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets amount
     *
     * @return string
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param string $amount The transaction amount.
     *
     * @return self
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets billing
     *
     * @return \OpenAPI\Client\Model\Address|null
     */
    public function getBilling()
    {
        return $this->container['billing'];
    }

    /**
     * Sets billing
     *
     * @param \OpenAPI\Client\Model\Address|null $billing billing
     *
     * @return self
     */
    public function setBilling($billing)
    {
        $this->container['billing'] = $billing;

        return $this;
    }

    /**
     * Gets billing_is_shipping
     *
     * @return \OpenAPI\Client\Model\BillingIsShipping|null
     */
    public function getBillingIsShipping()
    {
        return $this->container['billing_is_shipping'];
    }

    /**
     * Sets billing_is_shipping
     *
     * @param \OpenAPI\Client\Model\BillingIsShipping|null $billing_is_shipping billing_is_shipping
     *
     * @return self
     */
    public function setBillingIsShipping($billing_is_shipping)
    {
        $this->container['billing_is_shipping'] = $billing_is_shipping;

        return $this;
    }

    /**
     * Gets card
     *
     * @return string|null
     */
    public function getCard()
    {
        return $this->container['card'];
    }

    /**
     * Sets card
     *
     * @param string|null $card The credit card number or token.
     *
     * @return self
     */
    public function setCard($card)
    {
        $this->container['card'] = $card;

        return $this;
    }

    /**
     * Gets card_inquiry
     *
     * @return bool|null
     */
    public function getCardInquiry()
    {
        return $this->container['card_inquiry'];
    }

    /**
     * Sets card_inquiry
     *
     * @param bool|null $card_inquiry False if you would not like to run a card inquiry automatically.
     *
     * @return self
     */
    public function setCardInquiry($card_inquiry)
    {
        $this->container['card_inquiry'] = $card_inquiry;

        return $this;
    }

    /**
     * Gets cash_back_amount
     *
     * @return string|null
     */
    public function getCashBackAmount()
    {
        return $this->container['cash_back_amount'];
    }

    /**
     * Sets cash_back_amount
     *
     * @param string|null $cash_back_amount The cash back amount when using EBT cash benefits.
     *
     * @return self
     */
    public function setCashBackAmount($cash_back_amount)
    {
        $this->container['cash_back_amount'] = $cash_back_amount;

        return $this;
    }

    /**
     * Gets check_field
     *
     * @return \OpenAPI\Client\Model\CheckField|null
     */
    public function getCheckField()
    {
        return $this->container['check_field'];
    }

    /**
     * Sets check_field
     *
     * @param \OpenAPI\Client\Model\CheckField|null $check_field check_field
     *
     * @return self
     */
    public function setCheckField($check_field)
    {
        $this->container['check_field'] = $check_field;

        return $this;
    }

    /**
     * Gets check_field_mid
     *
     * @return bool|null
     */
    public function getCheckFieldMid()
    {
        return $this->container['check_field_mid'];
    }

    /**
     * Sets check_field_mid
     *
     * @param bool|null $check_field_mid Optional duplication check for EMV transactions. True if you want to validate the `check-field` sent in is not duplicated for EMV transactions on a merchant level.
     *
     * @return self
     */
    public function setCheckFieldMid($check_field_mid)
    {
        $this->container['check_field_mid'] = $check_field_mid;

        return $this;
    }

    /**
     * Gets client_ip
     *
     * @return string|null
     */
    public function getClientIp()
    {
        return $this->container['client_ip'];
    }

    /**
     * Sets client_ip
     *
     * @param string|null $client_ip The client IP address.
     *
     * @return self
     */
    public function setClientIp($client_ip)
    {
        $this->container['client_ip'] = $client_ip;

        return $this;
    }

    /**
     * Gets comments
     *
     * @return string|null
     */
    public function getComments()
    {
        return $this->container['comments'];
    }

    /**
     * Sets comments
     *
     * @param string|null $comments The transaction comments.
     *
     * @return self
     */
    public function setComments($comments)
    {
        $this->container['comments'] = $comments;

        return $this;
    }

    /**
     * Gets contactless
     *
     * @return \OpenAPI\Client\Model\Contactless|null
     */
    public function getContactless()
    {
        return $this->container['contactless'];
    }

    /**
     * Sets contactless
     *
     * @param \OpenAPI\Client\Model\Contactless|null $contactless contactless
     *
     * @return self
     */
    public function setContactless($contactless)
    {
        $this->container['contactless'] = $contactless;

        return $this;
    }

    /**
     * Gets contactless_device
     *
     * @return \OpenAPI\Client\Model\ContactlessDevice|null
     */
    public function getContactlessDevice()
    {
        return $this->container['contactless_device'];
    }

    /**
     * Sets contactless_device
     *
     * @param \OpenAPI\Client\Model\ContactlessDevice|null $contactless_device contactless_device
     *
     * @return self
     */
    public function setContactlessDevice($contactless_device)
    {
        $this->container['contactless_device'] = $contactless_device;

        return $this;
    }

    /**
     * Gets create_token
     *
     * @return \OpenAPI\Client\Model\CreateToken|null
     */
    public function getCreateToken()
    {
        return $this->container['create_token'];
    }

    /**
     * Sets create_token
     *
     * @param \OpenAPI\Client\Model\CreateToken|null $create_token create_token
     *
     * @return self
     */
    public function setCreateToken($create_token)
    {
        $this->container['create_token'] = $create_token;

        return $this;
    }

    /**
     * Gets csc
     *
     * @return string|null
     */
    public function getCsc()
    {
        return $this->container['csc'];
    }

    /**
     * Sets csc
     *
     * @param string|null $csc The CSC.
     *
     * @return self
     */
    public function setCsc($csc)
    {
        $this->container['csc'] = $csc;

        return $this;
    }

    /**
     * Gets customer_id
     *
     * @return string|null
     */
    public function getCustomerId()
    {
        return $this->container['customer_id'];
    }

    /**
     * Sets customer_id
     *
     * @param string|null $customer_id The customer ID.
     *
     * @return self
     */
    public function setCustomerId($customer_id)
    {
        $this->container['customer_id'] = $customer_id;

        return $this;
    }

    /**
     * Gets cvm
     *
     * @return \OpenAPI\Client\Model\Cvm|null
     */
    public function getCvm()
    {
        return $this->container['cvm'];
    }

    /**
     * Sets cvm
     *
     * @param \OpenAPI\Client\Model\Cvm|null $cvm cvm
     *
     * @return self
     */
    public function setCvm($cvm)
    {
        $this->container['cvm'] = $cvm;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description The transaction description.
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets email_address
     *
     * @return string|null
     */
    public function getEmailAddress()
    {
        return $this->container['email_address'];
    }

    /**
     * Sets email_address
     *
     * @param string|null $email_address The email address associated with the transaction.
     *
     * @return self
     */
    public function setEmailAddress($email_address)
    {
        $this->container['email_address'] = $email_address;

        return $this;
    }

    /**
     * Gets email_receipt
     *
     * @return \OpenAPI\Client\Model\EmailReceipt|null
     */
    public function getEmailReceipt()
    {
        return $this->container['email_receipt'];
    }

    /**
     * Sets email_receipt
     *
     * @param \OpenAPI\Client\Model\EmailReceipt|null $email_receipt email_receipt
     *
     * @return self
     */
    public function setEmailReceipt($email_receipt)
    {
        $this->container['email_receipt'] = $email_receipt;

        return $this;
    }

    /**
     * Gets emv_data
     *
     * @return string|null
     */
    public function getEmvData()
    {
        return $this->container['emv_data'];
    }

    /**
     * Sets emv_data
     *
     * @param string|null $emv_data The EMV data passed from the terminal.
     *
     * @return self
     */
    public function setEmvData($emv_data)
    {
        $this->container['emv_data'] = $emv_data;

        return $this;
    }

    /**
     * Gets emv_entry_method
     *
     * @return \OpenAPI\Client\Model\EmvEntryMethod|null
     */
    public function getEmvEntryMethod()
    {
        return $this->container['emv_entry_method'];
    }

    /**
     * Sets emv_entry_method
     *
     * @param \OpenAPI\Client\Model\EmvEntryMethod|null $emv_entry_method emv_entry_method
     *
     * @return self
     */
    public function setEmvEntryMethod($emv_entry_method)
    {
        $this->container['emv_entry_method'] = $emv_entry_method;

        return $this;
    }

    /**
     * Gets encrypted_track_data
     *
     * @return string|null
     */
    public function getEncryptedTrackData()
    {
        return $this->container['encrypted_track_data'];
    }

    /**
     * Sets encrypted_track_data
     *
     * @param string|null $encrypted_track_data The Encrypted Track Data can be passed in instead of the card number. This requires `track-format` to be set.
     *
     * @return self
     */
    public function setEncryptedTrackData($encrypted_track_data)
    {
        $this->container['encrypted_track_data'] = $encrypted_track_data;

        return $this;
    }

    /**
     * Gets exp_date
     *
     * @return string|null
     */
    public function getExpDate()
    {
        return $this->container['exp_date'];
    }

    /**
     * Sets exp_date
     *
     * @param string|null $exp_date The expiration date of the credit card in MMYY format.
     *
     * @return self
     */
    public function setExpDate($exp_date)
    {
        $this->container['exp_date'] = $exp_date;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id The ID of the transaction.
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets invoice
     *
     * @return string|null
     */
    public function getInvoice()
    {
        return $this->container['invoice'];
    }

    /**
     * Sets invoice
     *
     * @param string|null $invoice The invoice number.
     *
     * @return self
     */
    public function setInvoice($invoice)
    {
        $this->container['invoice'] = $invoice;

        return $this;
    }

    /**
     * Gets is_sp30
     *
     * @return bool|null
     */
    public function getIsSp30()
    {
        return $this->container['is_sp30'];
    }

    /**
     * Sets is_sp30
     *
     * @param bool|null $is_sp30 True if the terminal being used is a SP30.
     *
     * @return self
     */
    public function setIsSp30($is_sp30)
    {
        $this->container['is_sp30'] = $is_sp30;

        return $this;
    }

    /**
     * Gets key_serial_number
     *
     * @return string|null
     */
    public function getKeySerialNumber()
    {
        return $this->container['key_serial_number'];
    }

    /**
     * Sets key_serial_number
     *
     * @param string|null $key_serial_number The serial number of the encrypted device.
     *
     * @return self
     */
    public function setKeySerialNumber($key_serial_number)
    {
        $this->container['key_serial_number'] = $key_serial_number;

        return $this;
    }

    /**
     * Gets level3
     *
     * @return \OpenAPI\Client\Model\ClearentLevel3|null
     */
    public function getLevel3()
    {
        return $this->container['level3'];
    }

    /**
     * Sets level3
     *
     * @param \OpenAPI\Client\Model\ClearentLevel3|null $level3 level3
     *
     * @return self
     */
    public function setLevel3($level3)
    {
        $this->container['level3'] = $level3;

        return $this;
    }

    /**
     * Gets merchant_legacy_token
     *
     * @return \OpenAPI\Client\Model\MerchantLegacyToken|null
     */
    public function getMerchantLegacyToken()
    {
        return $this->container['merchant_legacy_token'];
    }

    /**
     * Sets merchant_legacy_token
     *
     * @param \OpenAPI\Client\Model\MerchantLegacyToken|null $merchant_legacy_token merchant_legacy_token
     *
     * @return self
     */
    public function setMerchantLegacyToken($merchant_legacy_token)
    {
        $this->container['merchant_legacy_token'] = $merchant_legacy_token;

        return $this;
    }

    /**
     * Gets order_id
     *
     * @return string|null
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param string|null $order_id The order ID of the transaction.
     *
     * @return self
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets partial_authorization
     *
     * @return bool|null
     */
    public function getPartialAuthorization()
    {
        return $this->container['partial_authorization'];
    }

    /**
     * Sets partial_authorization
     *
     * @param bool|null $partial_authorization True if you would like to check partial authorization.
     *
     * @return self
     */
    public function setPartialAuthorization($partial_authorization)
    {
        $this->container['partial_authorization'] = $partial_authorization;

        return $this;
    }

    /**
     * Gets pin_data
     *
     * @return string|null
     */
    public function getPinData()
    {
        return $this->container['pin_data'];
    }

    /**
     * Sets pin_data
     *
     * @param string|null $pin_data pin_data
     *
     * @return self
     */
    public function setPinData($pin_data)
    {
        $this->container['pin_data'] = $pin_data;

        return $this;
    }

    /**
     * Gets platform_fees
     *
     * @return \OpenAPI\Client\Model\PlatformFee[]|null
     */
    public function getPlatformFees()
    {
        return $this->container['platform_fees'];
    }

    /**
     * Sets platform_fees
     *
     * @param \OpenAPI\Client\Model\PlatformFee[]|null $platform_fees True if the batch was settled.
     *
     * @return self
     */
    public function setPlatformFees($platform_fees)
    {

        if (!is_null($platform_fees) && (count($platform_fees) > 2)) {
            throw new \InvalidArgumentException('invalid value for $platform_fees when calling RefundTransactionPayload., number of items must be less than or equal to 2.');
        }
        $this->container['platform_fees'] = $platform_fees;

        return $this;
    }

    /**
     * Gets purchase_order
     *
     * @return string|null
     */
    public function getPurchaseOrder()
    {
        return $this->container['purchase_order'];
    }

    /**
     * Sets purchase_order
     *
     * @param string|null $purchase_order The transaction purchase order.
     *
     * @return self
     */
    public function setPurchaseOrder($purchase_order)
    {
        $this->container['purchase_order'] = $purchase_order;

        return $this;
    }

    /**
     * Gets sales_tax_amount
     *
     * @return string|null
     */
    public function getSalesTaxAmount()
    {
        return $this->container['sales_tax_amount'];
    }

    /**
     * Sets sales_tax_amount
     *
     * @param string|null $sales_tax_amount The amount of the sales tax.
     *
     * @return self
     */
    public function setSalesTaxAmount($sales_tax_amount)
    {
        $this->container['sales_tax_amount'] = $sales_tax_amount;

        return $this;
    }

    /**
     * Gets sales_tax_type
     *
     * @return \OpenAPI\Client\Model\SalesTaxType|null
     */
    public function getSalesTaxType()
    {
        return $this->container['sales_tax_type'];
    }

    /**
     * Sets sales_tax_type
     *
     * @param \OpenAPI\Client\Model\SalesTaxType|null $sales_tax_type sales_tax_type
     *
     * @return self
     */
    public function setSalesTaxType($sales_tax_type)
    {
        $this->container['sales_tax_type'] = $sales_tax_type;

        return $this;
    }

    /**
     * Gets shipping
     *
     * @return \OpenAPI\Client\Model\Address|null
     */
    public function getShipping()
    {
        return $this->container['shipping'];
    }

    /**
     * Sets shipping
     *
     * @param \OpenAPI\Client\Model\Address|null $shipping shipping
     *
     * @return self
     */
    public function setShipping($shipping)
    {
        $this->container['shipping'] = $shipping;

        return $this;
    }

    /**
     * Gets software_type
     *
     * @return string|null
     */
    public function getSoftwareType()
    {
        return $this->container['software_type'];
    }

    /**
     * Sets software_type
     *
     * @param string|null $software_type The reference to the software name you are building.
     *
     * @return self
     */
    public function setSoftwareType($software_type)
    {
        $this->container['software_type'] = $software_type;

        return $this;
    }

    /**
     * Gets software_type_version
     *
     * @return string|null
     */
    public function getSoftwareTypeVersion()
    {
        return $this->container['software_type_version'];
    }

    /**
     * Sets software_type_version
     *
     * @param string|null $software_type_version Optional field to help with troubleshooting.
     *
     * @return self
     */
    public function setSoftwareTypeVersion($software_type_version)
    {
        $this->container['software_type_version'] = $software_type_version;

        return $this;
    }

    /**
     * Gets tip_amount
     *
     * @return string|null
     */
    public function getTipAmount()
    {
        return $this->container['tip_amount'];
    }

    /**
     * Sets tip_amount
     *
     * @param string|null $tip_amount The tip amount for the transaction.
     *
     * @return self
     */
    public function setTipAmount($tip_amount)
    {
        $this->container['tip_amount'] = $tip_amount;

        return $this;
    }

    /**
     * Gets token_description
     *
     * @return string|null
     */
    public function getTokenDescription()
    {
        return $this->container['token_description'];
    }

    /**
     * Sets token_description
     *
     * @param string|null $token_description The description of the token.
     *
     * @return self
     */
    public function setTokenDescription($token_description)
    {
        $this->container['token_description'] = $token_description;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \OpenAPI\Client\Model\TypeRefundTransaction
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \OpenAPI\Client\Model\TypeRefundTransaction $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets voucher_approval_code
     *
     * @return string|null
     */
    public function getVoucherApprovalCode()
    {
        return $this->container['voucher_approval_code'];
    }

    /**
     * Sets voucher_approval_code
     *
     * @param string|null $voucher_approval_code voucher_approval_code
     *
     * @return self
     */
    public function setVoucherApprovalCode($voucher_approval_code)
    {
        $this->container['voucher_approval_code'] = $voucher_approval_code;

        return $this;
    }

    /**
     * Gets voucher_serial_number
     *
     * @return string|null
     */
    public function getVoucherSerialNumber()
    {
        return $this->container['voucher_serial_number'];
    }

    /**
     * Sets voucher_serial_number
     *
     * @param string|null $voucher_serial_number voucher_serial_number
     *
     * @return self
     */
    public function setVoucherSerialNumber($voucher_serial_number)
    {
        $this->container['voucher_serial_number'] = $voucher_serial_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


